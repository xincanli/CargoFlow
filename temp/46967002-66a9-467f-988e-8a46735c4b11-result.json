{"name": "test_create_shipment[FF查看BookingOption1]", "status": "failed", "statusDetails": {"message": "AssertionError: \"期望:\"200,\"实际:\"403", "trace": "self = <testcases.test_BookingDistribution.TestBooking object at 0x000001D05A4F9910>\ncaseinfo2 = {'name': 'FF查看BookingOption', 'request': {'headers': {'Accept': 'application/ld+json', 'Authorization': 'Bearer eyJhbG...ld+json'}, 'method': 'get', 'url': '${BookingOption}'}, 'token_key': 'FF_token', 'validate': {'status_code': 200}, ...}\n\n    @pytest.mark.parametrize(\"caseinfo2\", yaml_util.read_testcase_yaml('create_BookingShipment.yaml'))\n    @log_decorator\n    def test_create_shipment(self, caseinfo2):\n        name = caseinfo2[\"name\"]\n        method = caseinfo2[\"request\"]['method']\n        url = yaml_util.replace_variables(caseinfo2['request']['url'])\n        headers = caseinfo2[\"request\"].get(\"headers\", {})\n        data = yaml_util.replace_variables(caseinfo2[\"request\"].get(\"data\", {}))\n        token_key = caseinfo2.get(\"token_key\", \"access_token\")\n        wait = caseinfo2.get(\"wait\", None)\n        expected_status = caseinfo2[\"validate\"][\"status_code\"]\n    \n        LogistObject = request_util.send_request(\n            method, url, data, headers=headers, use_token=True,\n            token_key=token_key, wait=wait\n        )\n    \n        if \"logistics-objects?\" in url or \"access-delegations\" in url:\n            loid = ''.join(re.findall(r'[a-zA-Z]+', name))\n            yaml_util.write_extract_yaml({loid: LogistObject.headers.get(\"Location\")})\n    \n>       assertion.assert_status_code(LogistObject, expected=expected_status)\n\ntestcases\\test_BookingDistribution.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <assertions.Assertions object at 0x000001D05A4D31A0>\nresp = <Response [403]>, expected = 200\n\n    def assert_status_code(self,resp, expected=100):\n>       assert resp.status_code == expected, f'\"期望:\"{expected},\"实际:\"{resp.status_code}'\nE       AssertionError: \"期望:\"200,\"实际:\"403\n\nassertions.py:3: AssertionError"}, "attachments": [{"name": "log", "source": "bfd92fbd-0ff1-454f-a63a-cffb474805da-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo2", "value": "{'name': 'FF查看BookingOption', 'token_key': 'FF_token', 'request': {'method': 'get', 'url': '${BookingOption}', 'headers': {'Accept': 'application/ld+json', 'Content-Type': 'application/ld+json'}}, 'wait': 0, 'validate': {'status_code': 200}}"}], "start": 1755085504938, "stop": 1755085505025, "uuid": "1347dacf-68e3-4b4a-a04e-5982b36079e4", "historyId": "73cd3782436bab635c73126f6b5359e3", "testCaseId": "a6e2f95e4d760ca994b032af6a07c46d", "fullName": "testcases.test_BookingDistribution.TestBooking#test_create_shipment", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_BookingDistribution"}, {"name": "subSuite", "value": "TestBooking"}, {"name": "host", "value": "xcli"}, {"name": "thread", "value": "7992-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_BookingDistribution"}], "titlePath": ["testcases", "test_BookingDistribution.py", "TestBooking"]}